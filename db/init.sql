CREATE DATABASE IF NOT EXISTS `vulnerabilitySharing` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `vulnerabilitySharing`;


drop table if exists leak;

drop table if exists leak_comment;

drop table if exists leak_type;

drop table if exists sys_attachment;

drop table if exists sys_department;

drop table if exists sys_log;

drop table if exists sys_message;

drop table if exists sys_role;

drop table if exists sys_role_authority;

drop table if exists sys_user;

drop table if exists sys_user_group;

drop table if exists sys_user_history_score;

drop table if exists sys_user_role;

drop table if exists task;

drop table if exists task_type;

drop table if exists task_user;

drop table if exists tool;

drop table if exists tool_comment;

drop table if exists tool_leak_type;

drop table if exists tool_type;

drop table if exists sys_menu;

/*==============================================================*/
/* Table: leak                                                  */
/*==============================================================*/
create table leak
(
   leak_id              int(11) not null auto_increment comment '漏洞ID',
   leak_no              varchar(30) not null comment '漏洞编号，根据规则自动生成',
   leak_name            varchar(30) not null comment '漏洞名称',
   influence_system_name varchar(30) not null comment '涉及系统名称',
   leak_status          int(1) not null comment '漏洞状态 1：未发布 2：未审核 3：已审核 4:已删除',
   submit_time          datetime not null comment '提交时间',
   leak_type_id         int(11) not null comment '漏洞类型ID',
   submit_user_id       int(11) comment '提交人用户ID',
   audit_user_id        int(11) comment '审核人用户ID',
   attachment_id        int(11) comment '附件ID',
   risk_level           int(1) not null comment '危险等级 1：高 2：中 3：低',
   leak_author          varchar(30) comment '漏洞作者',
   leak_outline         text not null comment '漏洞概要',
   CVE_ID               varchar(30) comment 'CVE-ID',
   CNNVD_ID             varchar(30) comment 'CNNVD-ID',
   CNVD_ID              varchar(30) comment 'CNVD-ID',
   audit_time           datetime comment '审核时间',
   audit_result         int(1) comment '审核结果  1：误报 2：重复 3：省公司首发漏洞  3：国网首发漏洞',
   audit_opinion        text comment '审核意见',
   leak_detail          text not null comment '漏洞详情',
   solution             text comment '解决方案',
   primary key (leak_id)
);

alter table leak comment '漏洞表';

/*==============================================================*/
/* Table: leak_comment                                          */
/*==============================================================*/
create table leak_comment
(
   id                   int(11) not null auto_increment comment 'ID',
   leak_id              int(11) not null comment '漏洞ID',
   comment_user_id      int(11) comment '评论人的用户ID',
   comment_time         datetime not null comment '评论时间',
   content              text not null comment '内容',
   primary key (id)
);

alter table leak_comment comment '漏洞评论表';

/*==============================================================*/
/* Table: leak_type                                             */
/*==============================================================*/
create table leak_type
(
   leak_type_id         int(11) not null auto_increment comment '类型ID',
   leak_name            varchar(20) not null comment '类型名称',
   parent_id            int(11) not null comment '父ID',
   primary key (leak_type_id)
);

alter table leak_type comment '漏洞类型';

/*==============================================================*/
/* Table: sys_attachment                                        */
/*==============================================================*/
create table sys_attachment
(
   attachment_id        int(11) not null auto_increment comment '附件ID',
   file_name            varchar(50) comment '文件名',
   file_length          bigint comment '文件大小',
   file_path            varchar(200) comment '路径',
   upload_time          datetime comment '上传时间',
   primary key (attachment_id)
);

alter table sys_attachment comment '附件表';

/*==============================================================*/
/* Table: sys_department                                        */
/*==============================================================*/
create table sys_department
(
   department_id        int(11) not null auto_increment comment '部门ID',
   department_name      varchar(50) not null comment '部门名称',
   parent_id            int(11) not null comment '父级部门ID',
   primary key (department_id)
);

alter table sys_department comment '部门表';

/*==============================================================*/
/* Table: sys_log                                               */
/*==============================================================*/
create table sys_log
(
   id                   int(11) not null auto_increment comment '主键',
   log_time             datetime not null comment '日志时间',
   user_account         varchar(20) not null comment '用户账号',
   log_target           varchar(20) not null comment '操作的模块',
   log_content          text not null comment '日志内容',
   primary key (id)
);

alter table sys_log comment '系统日志表';

/*==============================================================*/
/* Table: sys_message                                           */
/*==============================================================*/
create table sys_message
(
   id                   int not null auto_increment comment 'ID',
   user_id              int(11) comment '用户表主键',
   task_id              int(11) comment '任务ID',
   leak_id              int(11) comment '漏洞ID',
   message_type         int(1) not null comment '消息类型  1：任务队长转移  2：漏洞操作  3：任务操作',
   message              varchar(200) comment '消息内容',
   message_time         datetime comment '消息时间',
   is_read              int(1) comment '是否已读',
   primary key (id)
);

alter table sys_message comment '用户消息表';

/*==============================================================*/
/* Table: sys_role                                              */
/*==============================================================*/
create table sys_role
(
   role_id              int(11) not null auto_increment comment '角色ID主键',
   role_name            varchar(20) not null comment '角色名称',
   primary key (role_id)
);

alter table sys_role comment '角色表';

/*==============================================================*/
/* Table: sys_role_authority                                    */
/*==============================================================*/
create table sys_role_authority
(
   id                   int(11) not null auto_increment comment 'ID',
   role_id              int(11) not null comment '角色ID主键',
   authority_name       varchar(50) not null comment '权限名称',
   authority_url        varchar(200) not null comment '权限对应访问地址',
   primary key (id)
);

alter table sys_role_authority comment '角色权限中间表';

/*==============================================================*/
/* Table: sys_user                                              */
/*==============================================================*/
create table sys_user
(
   user_id              int(11) not null auto_increment comment '用户表主键',
   user_name            varchar(20) not null comment '用户姓名',
   user_account         varchar(20) not null comment '用户账号',
   nickname             varchar(20) comment '用户昵称',
   password             varchar(50) not null comment '用户密码',
   department_id        int(11) comment '用户所属部门ID',
   create_time          datetime not null comment '添加时间',
   task_score           int(11) not null default 0 comment '任务积分',
   user_group_id        int(11) comment '用户组',
   attachment_id        int(11) comment '附件ID',
   is_disable           int(1) not null default 0 comment '是否禁用；0 正常，1禁用',
   is_delete            int(1) not null default 0 comment '删除标识；0正常，1删除',
   primary key (user_id)
);

alter table sys_user comment '用户表';

/*==============================================================*/
/* Table: sys_user_group                                        */
/*==============================================================*/
create table sys_user_group
(
   user_group_id        int(11) not null auto_increment comment '用户组ID',
   user_group_name      varchar(20) not null comment '用户组名称',
   primary key (user_group_id)
);

alter table sys_user_group comment '用户组';

/*==============================================================*/
/* Table: sys_user_history_score                                */
/*==============================================================*/
create table sys_user_history_score
(
   id                   int(11) not null auto_increment comment 'ID',
   user_id              int(11) comment '用户表主键',
   year                 int(4) comment '年份',
   score                int(5) comment '积分',
   primary key (id)
);

alter table sys_user_history_score comment '用户历史积分表';

/*==============================================================*/
/* Table: sys_user_role                                         */
/*==============================================================*/
create table sys_user_role
(
   id                   int(11) not null auto_increment comment '主键',
   user_id              int(11) comment '用户表主键',
   role_id              int(11) comment '角色ID主键',
   primary key (id)
);

alter table sys_user_role comment '用户角色中间表';

/*==============================================================*/
/* Table: task                                                  */
/*==============================================================*/
create table task
(
   task_id              int(11) not null auto_increment comment '任务ID',
   task_name            varchar(30) not null comment '任务名称',
   task_type_id         int(11) not null comment '任务类型ID',
   release_user_id      int(11) comment '发布人用户ID',
   attachment_id        int(11) comment '附件ID',
   release_time         datetime not null comment '发布时间',
   task_outline         text comment '任务简介',
   task_requirement     text not null comment '任务要求',
   task_num             int(3) not null comment '限定人数',
   task_end_time        datetime not null comment '任务截止时间',
   task_score           int(5) not null comment '悬赏积分',
   status               int(1) not null comment '任务状态  0：未发布  1：发布中 2：已完成  3：已过期  4：已取消',
   task_finish_time     datetime comment '任务完成时间',
   primary key (task_id)
);

alter table task comment '任务表';

/*==============================================================*/
/* Table: task_type                                             */
/*==============================================================*/
create table task_type
(
   task_type_id         int(11) not null auto_increment comment '类型ID',
   task_name            varchar(20) not null comment '类型名称',
   parent_id            int(111) not null comment '父ID',
   primary key (task_type_id)
);

alter table task_type comment '任务类型';

/*==============================================================*/
/* Table: task_user                                             */
/*==============================================================*/
create table task_user
(
   id                   int(11) not null auto_increment comment '主键',
   task_id              int(11) comment '任务ID',
   user_id              int(11) comment '用户表主键',
   is_leader            int(1) not null comment '是否为队长   0：不是队长、1：队长  ',
   is_transfer          int(1) comment '是否正在转移队长   0：不转移、1：正在转移',
   primary key (id)
);

alter table task_user comment '任务和用户中间表（记录领取任务的队员）';

/*==============================================================*/
/* Table: tool                                                  */
/*==============================================================*/
create table tool
(
   tool_id              int(11) not null auto_increment comment '工具ID',
   tool_name            varchar(30) not null comment '工具名称',
   tool_type_id         int(11) not null comment '工具类型ID',
   submit_user_id       int(11) comment '提交人用户ID',
   attachment_id        int(11) comment '附件ID',
   tool_author          varchar(30) comment '工具作者',
   create_time          datetime not null comment '发布时间',
   tool_outline         text not null comment '工具简介',
   usage_method         text not null comment '使用方法',
   CVE_ID               varchar(30) comment 'CVE-ID',
   CNNVD_ID             varchar(30) comment 'CNNVD-ID',
   CNVD_ID              varchar(30) comment 'CNVD-ID',
   status               int(1) not null default 0 comment '共享状态1：未共享  2：已共享 3：已删除',
   primary key (tool_id)
);

alter table tool comment '工具表';

/*==============================================================*/
/* Table: tool_comment                                          */
/*==============================================================*/
create table tool_comment
(
   id                   int(11) not null auto_increment comment 'ID',
   tool_id              int(11) not null comment '工具ID',
   comment_user_id      int(11) comment '评论人的用户ID',
   comment_time         datetime not null comment '评论时间',
   content              text not null comment '内容',
   primary key (id)
);

alter table tool_comment comment '工具评论表';

/*==============================================================*/
/* Table: tool_leak_type                                        */
/*==============================================================*/
create table tool_leak_type
(
   ID                   int(11) not null auto_increment comment 'ID主键',
   leak_type_id         int(11) comment '类型ID',
   tool_id              int(11) comment '工具ID',
   primary key (ID)
);

alter table tool_leak_type comment '工具和漏洞类型中间表';

/*==============================================================*/
/* Table: tool_type                                             */
/*==============================================================*/
create table tool_type
(
   tool_type_id         int(11) not null auto_increment comment '类型ID',
   tool_name            varchar(20) not null comment '类型名称',
   parent_id            int(111) not null comment '父ID',
   primary key (tool_type_id)
);

alter table tool_type comment '工具类型';

/*==============================================================*/
/* Table: sys_menu                                              */
/*==============================================================*/
create table sys_menu
(
   menu_code            varchar(100) not null comment '菜单ID',
   name                 varchar(50) not null comment '名称',
   url                  varchar(255) not null comment '地址',
   parent_code          varchar(100) not null comment '父菜单ID',
   sort                 int(3) not null comment '排序',
   primary key (menu_code)
);

alter table sys_menu comment '菜单';


alter table leak add constraint FK_Reference_17 foreign key (submit_user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table leak add constraint FK_Reference_18 foreign key (audit_user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table leak add constraint FK_Reference_23 foreign key (attachment_id)
      references sys_attachment (attachment_id) on delete restrict on update restrict;

alter table leak add constraint FK_Reference_7 foreign key (leak_type_id)
      references leak_type (leak_type_id) on delete restrict on update restrict;

alter table leak_comment add constraint FK_Reference_21 foreign key (comment_user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table leak_comment add constraint FK_Reference_8 foreign key (leak_id)
      references leak (leak_id) on delete restrict on update restrict;

alter table sys_message add constraint FK_Reference_27 foreign key (user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table sys_message add constraint FK_Reference_28 foreign key (task_id)
      references task (task_id) on delete restrict on update restrict;

alter table sys_message add constraint FK_Reference_29 foreign key (leak_id)
      references leak (leak_id) on delete restrict on update restrict;

alter table sys_role_authority add constraint FK_Reference_4 foreign key (role_id)
      references sys_role (role_id) on delete restrict on update restrict;

alter table sys_user add constraint FK_Reference_26 foreign key (attachment_id)
      references sys_attachment (attachment_id) on delete restrict on update restrict;

alter table sys_user add constraint FK_Reference_5 foreign key (department_id)
      references sys_department (department_id) on delete restrict on update restrict;

alter table sys_user add constraint FK_Reference_6 foreign key (user_group_id)
      references sys_user_group (user_group_id) on delete restrict on update restrict;

alter table sys_user_history_score add constraint FK_Reference_16 foreign key (user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table sys_user_role add constraint FK_Reference_1 foreign key (role_id)
      references sys_role (role_id) on delete restrict on update restrict;

alter table sys_user_role add constraint FK_Reference_2 foreign key (user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table task add constraint FK_Reference_13 foreign key (task_type_id)
      references task_type (task_type_id) on delete restrict on update restrict;

alter table task add constraint FK_Reference_20 foreign key (release_user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table task add constraint FK_Reference_25 foreign key (attachment_id)
      references sys_attachment (attachment_id) on delete restrict on update restrict;

alter table task_user add constraint FK_Reference_14 foreign key (task_id)
      references task (task_id) on delete restrict on update restrict;

alter table task_user add constraint FK_Reference_15 foreign key (user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table tool add constraint FK_Reference_11 foreign key (tool_type_id)
      references tool_type (tool_type_id) on delete restrict on update restrict;

alter table tool add constraint FK_Reference_19 foreign key (submit_user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table tool add constraint FK_Reference_24 foreign key (attachment_id)
      references sys_attachment (attachment_id) on delete restrict on update restrict;

alter table tool_comment add constraint FK_Reference_12 foreign key (tool_id)
      references tool (tool_id) on delete restrict on update restrict;

alter table tool_comment add constraint FK_Reference_22 foreign key (comment_user_id)
      references sys_user (user_id) on delete restrict on update restrict;

alter table tool_leak_type add constraint FK_Reference_10 foreign key (tool_id)
      references tool (tool_id) on delete restrict on update restrict;

alter table tool_leak_type add constraint FK_Reference_9 foreign key (leak_type_id)
      references leak_type (leak_type_id) on delete restrict on update restrict;


	  
/** 角色初始化  **/  
INSERT INTO `sys_role` VALUES ('1', '系统管理员');
INSERT INTO `sys_role` VALUES ('2', '漏洞审计员');
INSERT INTO `sys_role` VALUES ('3', '任务管理员');
INSERT INTO `sys_role` VALUES ('4', '普通用户');


/** 管理员用户初始化  **/ 
INSERT INTO `sys_user` VALUES ('1', '管理员', 'admin', '管理员', '3E0ADC3949BA59ABBE56E057F20F88E1', null, '2016-08-02 16:53:48', '0', null, null, '0', '0');


/** 用户角色关系初始化  **/
INSERT INTO `sys_user_role` VALUES ('1', '1', '1');
INSERT INTO `sys_user_role` VALUES ('2', '1', '2');
INSERT INTO `sys_user_role` VALUES ('3', '1', '3');
INSERT INTO `sys_user_role` VALUES ('4', '1', '4');


/** 菜单初始化  **/
INSERT INTO `sys_menu` VALUES ('admin', '管理', '/admin', '0', 5);
INSERT INTO `sys_menu` VALUES ('bug', '漏洞', '/bug', '0', 2);
INSERT INTO `sys_menu` VALUES ('bugAdministration', '漏洞管理', '/bugAdministration', 'admin', 20);
INSERT INTO `sys_menu` VALUES ('bugDelete', '漏洞删除', '/toBug', 'bugAdministration', 27);
INSERT INTO `sys_menu` VALUES ('bugList', '漏洞列表', '/toBugList', 'bug', 6);
INSERT INTO `sys_menu` VALUES ('bugStatistics', '漏洞统计', '/toBugStatistics', 'bug', 9);
INSERT INTO `sys_menu` VALUES ('bugType', '漏洞类型', '/toBugType', 'bugAdministration', 26);
INSERT INTO `sys_menu` VALUES ('group', '用户组', '/toGroup', 'userAdministration', 25);
INSERT INTO `sys_menu` VALUES ('log', '安全审计', '/toLog', 'admin', 18);
INSERT INTO `sys_menu` VALUES ('mark', '积分清零', '/toMark', 'taskAdministration', 31);
INSERT INTO `sys_menu` VALUES ('myBugs', '我的漏洞', '/toMyBug', 'bug', 7);
INSERT INTO `sys_menu` VALUES ('myTasks', '我的任务', '/toMyTask', 'task', 15);
INSERT INTO `sys_menu` VALUES ('myTools', '我的工具', '/toMyTools', 'tool', 11);
INSERT INTO `sys_menu` VALUES ('newBug', '创建漏洞', '/toNewBug', 'bug', 8);
INSERT INTO `sys_menu` VALUES ('newTask', '创建任务', '/toNewTask', 'task', 16);
INSERT INTO `sys_menu` VALUES ('newTool', '创建工具', '/toNewTool', 'tool', 12);
INSERT INTO `sys_menu` VALUES ('organization', '组织', '/toOrganization', 'userAdministration', 24);
INSERT INTO `sys_menu` VALUES ('task', '任务', '/task', '0', 4);
INSERT INTO `sys_menu` VALUES ('taskAdministration', '任务管理', '/taskAdministration', 'admin', 22);
INSERT INTO `sys_menu` VALUES ('taskList', '任务列表', '/toTaskList', 'task', 14);
INSERT INTO `sys_menu` VALUES ('taskStatistics', '任务统计', '/toTaskStatistics', 'task', 17);
INSERT INTO `sys_menu` VALUES ('taskType', '任务类型', '/toTaskType', 'taskAdministration', 30);
INSERT INTO `sys_menu` VALUES ('tool', '工具', '/tool', '0', 3);
INSERT INTO `sys_menu` VALUES ('toolAdministration', '工具管理', '/toolAdministration', 'admin', 21);
INSERT INTO `sys_menu` VALUES ('toolDelete', '工具删除', '/toTool', 'toolAdministration', 29);
INSERT INTO `sys_menu` VALUES ('toolList', '工具列表', '/toToolList', 'tool', 10);
INSERT INTO `sys_menu` VALUES ('toolStatistics', '工具统计', '/toToolStatistics', 'tool', 13);
INSERT INTO `sys_menu` VALUES ('toolType', '工具类型', '/toToolType', 'toolAdministration', 28);
INSERT INTO `sys_menu` VALUES ('user', '用户', '/toUsers', 'userAdministration', 23);
INSERT INTO `sys_menu` VALUES ('userAdministration', '用户管理', '/userAdministration', 'admin', 19);



/** 权限信息初始化  **/
INSERT INTO `sys_role_authority` VALUES (43, 4, '到首页', '/toHome');
INSERT INTO `sys_role_authority` VALUES (46, 2, '到首页', '/toHome');
INSERT INTO `sys_role_authority` VALUES (47, 3, '到首页', '/toHome');
INSERT INTO `sys_role_authority` VALUES (48, 1, '到首页', '/toHome');
INSERT INTO `sys_role_authority` VALUES (49, 4, '最新发布漏洞', '/leak/getLatestReleaseLeak');
INSERT INTO `sys_role_authority` VALUES (50, 2, '最新发布漏洞', '/leak/getLatestReleaseLeak');
INSERT INTO `sys_role_authority` VALUES (51, 4, '最新审核漏洞', '/leak/getLatestAuditLeak');
INSERT INTO `sys_role_authority` VALUES (52, 2, '最新审核漏洞', '/leak/getLatestAuditLeak');
INSERT INTO `sys_role_authority` VALUES (53, 4, '最新发布工具', '/tool/getLatestReleaseTool');
INSERT INTO `sys_role_authority` VALUES (54, 1, '最新发布工具', '/tool/getLatestReleaseTool');
INSERT INTO `sys_role_authority` VALUES (55, 3, '最新发布任务', '/task/getLatestReleaseTask');
INSERT INTO `sys_role_authority` VALUES (56, 3, '最新完成任务', '/task/getLatestFinishTask');
INSERT INTO `sys_role_authority` VALUES (57, 4, '到漏洞列表', '/toBugList');
INSERT INTO `sys_role_authority` VALUES (58, 2, '到漏洞列表', '/toBugList');
INSERT INTO `sys_role_authority` VALUES (59, 4, '父漏洞类型', '/leakType/findAll');
INSERT INTO `sys_role_authority` VALUES (60, 2, '父漏洞类型', '/leakType/findAll');
INSERT INTO `sys_role_authority` VALUES (61, 4, '到我的漏洞', '/toMyBug');
INSERT INTO `sys_role_authority` VALUES (62, 2, '到我的漏洞', '/toMyBug');
INSERT INTO `sys_role_authority` VALUES (63, 4, '我的未发布', '/leak/findMyUnreleasePageLeaks');
INSERT INTO `sys_role_authority` VALUES (64, 4, '我的已发布', '/leak/findMyReleasePageLeaks');
INSERT INTO `sys_role_authority` VALUES (65, 4, '真实删除漏洞', '/leak/realDeleteLeak');
INSERT INTO `sys_role_authority` VALUES (66, 4, '发布漏洞', '/leak/releaseLeak');
INSERT INTO `sys_role_authority` VALUES (67, 4, '我的审核', '/leak/pageMyReviewLeaks');
INSERT INTO `sys_role_authority` VALUES (68, 4, '到漏洞修改', '/leak/toUpdateLeak');
INSERT INTO `sys_role_authority` VALUES (69, 2, '到漏洞修改', '/leak/toUpdateLeak');
INSERT INTO `sys_role_authority` VALUES (70, 4, '更新漏洞信息', '/leak/updateLeak');
INSERT INTO `sys_role_authority` VALUES (71, 2, '更新漏洞信息', '/leak/updateLeak');
INSERT INTO `sys_role_authority` VALUES (72, 4, '更新并发布漏洞信息', '/leak/updateAndReleaseLeak');
INSERT INTO `sys_role_authority` VALUES (73, 2, '更新并发布漏洞信息', '/leak/updateAndReleaseLeak');
INSERT INTO `sys_role_authority` VALUES (74, 4, '到创建漏洞', '/toNewBug');
INSERT INTO `sys_role_authority` VALUES (75, 4, '漏洞类型,危险等级', '/leak/getLoadingInfo');
INSERT INTO `sys_role_authority` VALUES (76, 4, '新建漏洞', '/leak/saveLeak');
INSERT INTO `sys_role_authority` VALUES (77, 4, '新建并发布漏洞', '/leak/saveAndReleaseLeak');
INSERT INTO `sys_role_authority` VALUES (78, 4, '到漏洞统计', '/toBugStatistics');
INSERT INTO `sys_role_authority` VALUES (79, 2, '到漏洞统计', '/toBugStatistics');
INSERT INTO `sys_role_authority` VALUES (80, 3, '到漏洞统计', '/toBugStatistics');
INSERT INTO `sys_role_authority` VALUES (81, 1, '到漏洞统计', '/toBugStatistics');
INSERT INTO `sys_role_authority` VALUES (82, 4, '漏洞是否发布统计', '/leak/countLeakStatus');
INSERT INTO `sys_role_authority` VALUES (83, 2, '漏洞是否发布统计', '/leak/countLeakStatus');
INSERT INTO `sys_role_authority` VALUES (84, 3, '漏洞是否发布统计', '/leak/countLeakStatus');
INSERT INTO `sys_role_authority` VALUES (85, 1, '漏洞是否发布统计', '/leak/countLeakStatus');
INSERT INTO `sys_role_authority` VALUES (86, 4, '漏洞类型统计', '/leak/countLeakTypes');
INSERT INTO `sys_role_authority` VALUES (87, 2, '漏洞类型统计', '/leak/countLeakTypes');
INSERT INTO `sys_role_authority` VALUES (88, 3, '漏洞类型统计', '/leak/countLeakTypes');
INSERT INTO `sys_role_authority` VALUES (89, 1, '漏洞类型统计', '/leak/countLeakTypes');
INSERT INTO `sys_role_authority` VALUES (90, 4, '审核结果统计', '/leak/findAuditResultStatistics');
INSERT INTO `sys_role_authority` VALUES (91, 2, '审核结果统计', '/leak/findAuditResultStatistics');
INSERT INTO `sys_role_authority` VALUES (92, 3, '审核结果统计', '/leak/findAuditResultStatistics');
INSERT INTO `sys_role_authority` VALUES (93, 1, '审核结果统计', '/leak/findAuditResultStatistics');
INSERT INTO `sys_role_authority` VALUES (94, 4, '漏洞个人榜', '/leak/findPageSysUserRanks');
INSERT INTO `sys_role_authority` VALUES (95, 2, '漏洞个人榜', '/leak/findPageSysUserRanks');
INSERT INTO `sys_role_authority` VALUES (96, 3, '漏洞个人榜', '/leak/findPageSysUserRanks');
INSERT INTO `sys_role_authority` VALUES (97, 1, '漏洞个人榜', '/leak/findPageSysUserRanks');
INSERT INTO `sys_role_authority` VALUES (98, 4, '漏洞单位榜', '/leak/findPageDepartmentRanks');
INSERT INTO `sys_role_authority` VALUES (99, 2, '漏洞单位榜', '/leak/findPageDepartmentRanks');
INSERT INTO `sys_role_authority` VALUES (100, 3, '漏洞单位榜', '/leak/findPageDepartmentRanks');
INSERT INTO `sys_role_authority` VALUES (101, 1, '漏洞单位榜', '/leak/findPageDepartmentRanks');
INSERT INTO `sys_role_authority` VALUES (102, 4, '到漏洞详情', '/leak/idToLeak');
INSERT INTO `sys_role_authority` VALUES (103, 2, '到漏洞详情', '/leak/idToLeak');
INSERT INTO `sys_role_authority` VALUES (104, 2, '生成通知单', '/leak/notice');
INSERT INTO `sys_role_authority` VALUES (105, 2, '提交审核', '/leak/submitAudit');
INSERT INTO `sys_role_authority` VALUES (106, 4, '获得评论数据', '/leakComment/findCommentPage');
INSERT INTO `sys_role_authority` VALUES (107, 2, '获得评论数据', '/leakComment/findCommentPage');
INSERT INTO `sys_role_authority` VALUES (108, 4, '提交评论', '/leakComment/save');
INSERT INTO `sys_role_authority` VALUES (109, 2, '提交评论', '/leakComment/save');
INSERT INTO `sys_role_authority` VALUES (110, 4, '到我的工具', '/toMyTools');
INSERT INTO `sys_role_authority` VALUES (111, 4, '我的未发布工具', '/tool/findNotReleasePage');
INSERT INTO `sys_role_authority` VALUES (112, 4, '我的已发布工具', '/tool/findReleasePage');
INSERT INTO `sys_role_authority` VALUES (113, 4, '发布工具', '/tool/releaseTool');
INSERT INTO `sys_role_authority` VALUES (114, 4, '真实删除工具', '/tool/delete');
INSERT INTO `sys_role_authority` VALUES (115, 4, '到修改工具', '/tool/update');
INSERT INTO `sys_role_authority` VALUES (116, 4, '更新工具', '/tool/doUpdate');
INSERT INTO `sys_role_authority` VALUES (117, 4, '更新并发布工具', '/tool/doUpdateAndRelease');
INSERT INTO `sys_role_authority` VALUES (118, 4, '到创建工具', '/toNewTool');
INSERT INTO `sys_role_authority` VALUES (119, 4, '父工具类型', '/toolType/findAll');
INSERT INTO `sys_role_authority` VALUES (121, 4, '新建工具', '/tool/save');
INSERT INTO `sys_role_authority` VALUES (122, 4, '新建并发布工具', '/tool/saveAndRelease');
INSERT INTO `sys_role_authority` VALUES (123, 4, '到工具统计', '/toToolStatistics');
INSERT INTO `sys_role_authority` VALUES (124, 2, '到工具统计', '/toToolStatistics');
INSERT INTO `sys_role_authority` VALUES (125, 3, '到工具统计', '/toToolStatistics');
INSERT INTO `sys_role_authority` VALUES (126, 1, '到工具统计', '/toToolStatistics');
INSERT INTO `sys_role_authority` VALUES (127, 4, '工具概要统计', '/tool/findToolStatistic');
INSERT INTO `sys_role_authority` VALUES (128, 2, '工具概要统计', '/tool/findToolStatistic');
INSERT INTO `sys_role_authority` VALUES (129, 3, '工具概要统计', '/tool/findToolStatistic');
INSERT INTO `sys_role_authority` VALUES (130, 1, '工具概要统计', '/tool/findToolStatistic');
INSERT INTO `sys_role_authority` VALUES (131, 4, '工具个人榜', '/tool/findPagePersonalToolRanks');
INSERT INTO `sys_role_authority` VALUES (132, 2, '工具个人榜', '/tool/findPagePersonalToolRanks');
INSERT INTO `sys_role_authority` VALUES (133, 3, '工具个人榜', '/tool/findPagePersonalToolRanks');
INSERT INTO `sys_role_authority` VALUES (134, 1, '工具个人榜', '/tool/findPagePersonalToolRanks');
INSERT INTO `sys_role_authority` VALUES (135, 4, '工具单位榜', '/tool/findPageDepartmentToolRanks');
INSERT INTO `sys_role_authority` VALUES (136, 2, '工具单位榜', '/tool/findPageDepartmentToolRanks');
INSERT INTO `sys_role_authority` VALUES (137, 3, '工具单位榜', '/tool/findPageDepartmentToolRanks');
INSERT INTO `sys_role_authority` VALUES (138, 1, '工具单位榜', '/tool/findPageDepartmentToolRanks');
INSERT INTO `sys_role_authority` VALUES (139, 4, '到工具详情', '/tool/toolDetail');
INSERT INTO `sys_role_authority` VALUES (140, 1, '到工具详情', '/tool/toolDetail');
INSERT INTO `sys_role_authority` VALUES (141, 4, '获得评论信息', '/toolComment/findCommentPage');
INSERT INTO `sys_role_authority` VALUES (142, 1, '获得评论信息', '/toolComment/findCommentPage');
INSERT INTO `sys_role_authority` VALUES (143, 4, '保存评论信息', '/toolComment/save');
INSERT INTO `sys_role_authority` VALUES (144, 1, '保存评论信息', '/toolComment/save');
INSERT INTO `sys_role_authority` VALUES (145, 4, '到任务列表', '/toTaskList');
INSERT INTO `sys_role_authority` VALUES (146, 3, '到任务列表', '/toTaskList');
INSERT INTO `sys_role_authority` VALUES (147, 4, '父任务类型', '/taskType/findAll');
INSERT INTO `sys_role_authority` VALUES (148, 3, '父任务类型', '/taskType/findAll');
INSERT INTO `sys_role_authority` VALUES (149, 4, '任务列表数据', '/task/findPage');
INSERT INTO `sys_role_authority` VALUES (150, 3, '任务列表数据', '/task/findPage');
INSERT INTO `sys_role_authority` VALUES (151, 4, '到我的任务', '/toMyTask');
INSERT INTO `sys_role_authority` VALUES (152, 3, '到我的任务', '/toMyTask');
INSERT INTO `sys_role_authority` VALUES (153, 3, '未发布', '/task/findNotReleasePage');
INSERT INTO `sys_role_authority` VALUES (154, 3, '发布任务', '/task/release');
INSERT INTO `sys_role_authority` VALUES (155, 3, '删除任务', '/task/delete');
INSERT INTO `sys_role_authority` VALUES (156, 3, '已发布', '/task/findReleasePage');
INSERT INTO `sys_role_authority` VALUES (157, 3, '确认任务完成', '/task/complete');
INSERT INTO `sys_role_authority` VALUES (158, 3, '取消任务', '/task/cancel');
INSERT INTO `sys_role_authority` VALUES (159, 4, '由我接受', '/task/findReceivingPage');
INSERT INTO `sys_role_authority` VALUES (160, 4, '提交任务成果', '/task/submitResult');
INSERT INTO `sys_role_authority` VALUES (161, 4, '找到非队长', '/taskUser/findNotLeaderByTaskId');
INSERT INTO `sys_role_authority` VALUES (162, 4, '转移队长', '/task/changeLeader');
INSERT INTO `sys_role_authority` VALUES (163, 3, '到修改任务', '/task/update');
INSERT INTO `sys_role_authority` VALUES (164, 3, '更新任务', '/task/doUpdate');
INSERT INTO `sys_role_authority` VALUES (165, 3, '更新并发布任务', '/task/doUpdateAndRelease');
INSERT INTO `sys_role_authority` VALUES (166, 3, '到创建任务', '/toNewTask');
INSERT INTO `sys_role_authority` VALUES (169, 3, '父任务类型', '/taskType/findAll');
INSERT INTO `sys_role_authority` VALUES (170, 3, '新建任务', '/task/save');
INSERT INTO `sys_role_authority` VALUES (171, 3, '新建并发布任务', '/task/saveAndRelease');
INSERT INTO `sys_role_authority` VALUES (172, 4, '到任务详情', '/task/taskDetail');
INSERT INTO `sys_role_authority` VALUES (173, 3, '到任务详情', '/task/taskDetail');
INSERT INTO `sys_role_authority` VALUES (174, 4, '分配积分', '/task/mark');
INSERT INTO `sys_role_authority` VALUES (175, 4, '接受任务', '/task/receive');
INSERT INTO `sys_role_authority` VALUES (176, 4, '拒绝队长', '/task/refuseLeader');
INSERT INTO `sys_role_authority` VALUES (177, 4, '接受队长', '/task/receiveLeader');
INSERT INTO `sys_role_authority` VALUES (178, 4, '到任务统计', '/toTaskStatistics');
INSERT INTO `sys_role_authority` VALUES (179, 2, '到任务统计', '/toTaskStatistics');
INSERT INTO `sys_role_authority` VALUES (180, 3, '到任务统计', '/toTaskStatistics');
INSERT INTO `sys_role_authority` VALUES (181, 1, '到任务统计', '/toTaskStatistics');
INSERT INTO `sys_role_authority` VALUES (182, 4, '任务概要统计', '/task/findTaskStatistic');
INSERT INTO `sys_role_authority` VALUES (183, 2, '任务概要统计', '/task/findTaskStatistic');
INSERT INTO `sys_role_authority` VALUES (184, 3, '任务概要统计', '/task/findTaskStatistic');
INSERT INTO `sys_role_authority` VALUES (185, 1, '任务概要统计', '/task/findTaskStatistic');
INSERT INTO `sys_role_authority` VALUES (186, 4, '任务时间线', '/task/findTaskTimeLine');
INSERT INTO `sys_role_authority` VALUES (187, 2, '任务时间线', '/task/findTaskTimeLine');
INSERT INTO `sys_role_authority` VALUES (188, 3, '任务时间线', '/task/findTaskTimeLine');
INSERT INTO `sys_role_authority` VALUES (189, 1, '任务时间线', '/task/findTaskTimeLine');
INSERT INTO `sys_role_authority` VALUES (190, 4, '个人榜', '/task/findPagePersonalTaskRanks');
INSERT INTO `sys_role_authority` VALUES (191, 2, '个人榜', '/task/findPagePersonalTaskRanks');
INSERT INTO `sys_role_authority` VALUES (192, 3, '个人榜', '/task/findPagePersonalTaskRanks');
INSERT INTO `sys_role_authority` VALUES (193, 1, '个人榜', '/task/findPagePersonalTaskRanks');
INSERT INTO `sys_role_authority` VALUES (194, 4, '单位榜', '/task/findPageDepartmentTaskRanks');
INSERT INTO `sys_role_authority` VALUES (195, 2, '单位榜', '/task/findPageDepartmentTaskRanks');
INSERT INTO `sys_role_authority` VALUES (196, 3, '单位榜', '/task/findPageDepartmentTaskRanks');
INSERT INTO `sys_role_authority` VALUES (197, 1, '单位榜', '/task/findPageDepartmentTaskRanks');
INSERT INTO `sys_role_authority` VALUES (198, 1, '到安全审计', '/toLog');
INSERT INTO `sys_role_authority` VALUES (199, 1, '安全审计数据', '/sysLog/findPageResults');
INSERT INTO `sys_role_authority` VALUES (200, 1, '到用户管理', '/toUsers');
INSERT INTO `sys_role_authority` VALUES (201, 1, '用户管理数据', '/sysUser/findPageSysUser');
INSERT INTO `sys_role_authority` VALUES (202, 1, '禁用用户', '/sysUser/disableSysUser');
INSERT INTO `sys_role_authority` VALUES (203, 1, '取消禁用', '/sysUser/cancelDisableSysUser');
INSERT INTO `sys_role_authority` VALUES (204, 1, '初始化密码', '/sysUser/initPassword');
INSERT INTO `sys_role_authority` VALUES (205, 1, '批量禁用用户', '/sysUser/disableSysUserList');
INSERT INTO `sys_role_authority` VALUES (206, 1, '批量取消禁用用户', '/sysUser/cancelDisableSysUserList');
INSERT INTO `sys_role_authority` VALUES (207, 1, '获得所有的用户组信息', '/sysUserGroup/findSysUserGroups');
INSERT INTO `sys_role_authority` VALUES (208, 1, '修改用户 添加用户', '/sysUser/saveOrUpdateSysUer');
INSERT INTO `sys_role_authority` VALUES (209, 1, '批量删除用户', '/sysUser/deleteSysUserList');
INSERT INTO `sys_role_authority` VALUES (210, 1, '删除用户', '/sysUser/delteSysUserById');
INSERT INTO `sys_role_authority` VALUES (211, 1, '到组织管理', '/toOrganization');
INSERT INTO `sys_role_authority` VALUES (212, 1, '获得部门信息', '/sysDepartment/findPageSysDepartments');
INSERT INTO `sys_role_authority` VALUES (213, 1, '所有部门(父部门)', '/sysDepartment/findSysDepartments');
INSERT INTO `sys_role_authority` VALUES (214, 1, '批量删除组织', '/sysDepartment/deleteSysDepartmentList');
INSERT INTO `sys_role_authority` VALUES (215, 1, '修改组织 添加组织', '/sysDepartment/saveOrUpdateSysDepartment');
INSERT INTO `sys_role_authority` VALUES (216, 1, '删除组织', '/sysDepartment/deleteSysDepartment');
INSERT INTO `sys_role_authority` VALUES (217, 1, '到用户组', '/toGroup');
INSERT INTO `sys_role_authority` VALUES (218, 1, '获得用户组数据', '/sysUserGroup/findPageSysUserGroups');
INSERT INTO `sys_role_authority` VALUES (219, 1, '添加组 修改组', '/sysUserGroup/saveOrUpdateSysUserGroup');
INSERT INTO `sys_role_authority` VALUES (220, 1, '批量删除', '/sysUserGroup/deleteSysUserGroupList');
INSERT INTO `sys_role_authority` VALUES (221, 1, '删除组', '/sysUserGroup/deleteSysUserGroup');
INSERT INTO `sys_role_authority` VALUES (222, 1, '到漏洞类型', '/toBugType');
INSERT INTO `sys_role_authority` VALUES (223, 1, '获得漏洞类型数据', '/leakType/findPageLeakTypes');
INSERT INTO `sys_role_authority` VALUES (225, 1, '添加漏洞类型  修改漏洞类型', '/leakType/saveOrUpdateLeakType');
INSERT INTO `sys_role_authority` VALUES (226, 1, '批量删除漏洞类型', '/leakType/deleteLeakTypeList');
INSERT INTO `sys_role_authority` VALUES (227, 1, '删除漏洞类型', '/leakType/deleteLeakType');
INSERT INTO `sys_role_authority` VALUES (228, 1, '父漏洞类型', '/leakType/findAll');
INSERT INTO `sys_role_authority` VALUES (230, 4, '工具列表数据', '/tool/findPage');
INSERT INTO `sys_role_authority` VALUES (231, 1, '工具列表数据', '/tool/findPage');
INSERT INTO `sys_role_authority` VALUES (232, 1, '到漏洞管理', '/toBug');
INSERT INTO `sys_role_authority` VALUES (233, 1, '获得漏洞数据', '/leak/findPageLeaks');
INSERT INTO `sys_role_authority` VALUES (234, 1, '批量删除漏洞', '/leak/deleteLeakList');
INSERT INTO `sys_role_authority` VALUES (235, 1, '删除漏洞', '/leak/deleteLeak');
INSERT INTO `sys_role_authority` VALUES (236, 1, '到工具类型', '/toToolType');
INSERT INTO `sys_role_authority` VALUES (237, 1, '获得工具类型数据', '/toolType/findPageToolTypes');
INSERT INTO `sys_role_authority` VALUES (238, 1, '批量删除工具类型', '/toolType/deleteToolTypeList');
INSERT INTO `sys_role_authority` VALUES (239, 1, '删除工具类型', '/toolType/deleteToolType');
INSERT INTO `sys_role_authority` VALUES (240, 1, '父工具类型', '/toolType/findAll');
INSERT INTO `sys_role_authority` VALUES (241, 1, '添加工具类型  修改工具类型', '/toolType/saveOrUpdateToolType');
INSERT INTO `sys_role_authority` VALUES (242, 1, '到工具管理', '/toTool');
INSERT INTO `sys_role_authority` VALUES (243, 4, '工具列表数据', '/tool/findPage');
INSERT INTO `sys_role_authority` VALUES (244, 1, '工具列表数据', '/tool/findPage');
INSERT INTO `sys_role_authority` VALUES (245, 1, '批量删除工具', '/tool/deleteTools');
INSERT INTO `sys_role_authority` VALUES (246, 1, '删除工具', '/tool/deleteTool');
INSERT INTO `sys_role_authority` VALUES (247, 1, '到任务类型管理', '/toTaskType');
INSERT INTO `sys_role_authority` VALUES (248, 1, '获得任务类型数据', '/taskType/findPageTaskTypes');
INSERT INTO `sys_role_authority` VALUES (249, 1, '添加任务类型  修改任务类型', '/taskType/saveOrUpdateTaskType');
INSERT INTO `sys_role_authority` VALUES (250, 1, '批量删除任务类型', '/taskType/deleteTaskTypeList');
INSERT INTO `sys_role_authority` VALUES (251, 1, '删除任务类型', '/taskType/deleteTaskType');
INSERT INTO `sys_role_authority` VALUES (252, 1, '到积分清零', '/toMark');
INSERT INTO `sys_role_authority` VALUES (253, 1, '积分清零', '/sysUserHistoryScore/clearScore');
INSERT INTO `sys_role_authority` VALUES (254, 4, '到个人中心', '/toUserInfo');
INSERT INTO `sys_role_authority` VALUES (255, 2, '到个人中心', '/toUserInfo');
INSERT INTO `sys_role_authority` VALUES (256, 3, '到个人中心', '/toUserInfo');
INSERT INTO `sys_role_authority` VALUES (257, 1, '到个人中心', '/toUserInfo');
INSERT INTO `sys_role_authority` VALUES (258, 4, '到修改个人信息', '/toUserSetting');
INSERT INTO `sys_role_authority` VALUES (259, 2, '到修改个人信息', '/toUserSetting');
INSERT INTO `sys_role_authority` VALUES (260, 3, '到修改个人信息', '/toUserSetting');
INSERT INTO `sys_role_authority` VALUES (261, 1, '到修改个人信息', '/toUserSetting');
INSERT INTO `sys_role_authority` VALUES (262, 4, '更新个人信息', '/sysUser/update');
INSERT INTO `sys_role_authority` VALUES (263, 2, '更新个人信息', '/sysUser/update');
INSERT INTO `sys_role_authority` VALUES (264, 3, '更新个人信息', '/sysUser/update');
INSERT INTO `sys_role_authority` VALUES (265, 1, '更新个人信息', '/sysUser/update');
INSERT INTO `sys_role_authority` VALUES (266, 4, '注销登陆', '/logout');
INSERT INTO `sys_role_authority` VALUES (267, 2, '注销登陆', '/logout');
INSERT INTO `sys_role_authority` VALUES (268, 3, '注销登陆', '/logout');
INSERT INTO `sys_role_authority` VALUES (269, 1, '注销登陆', '/logout');
INSERT INTO `sys_role_authority` VALUES (270, 4, '到用户消息', '/toUserNew');
INSERT INTO `sys_role_authority` VALUES (271, 2, '到用户消息', '/toUserNew');
INSERT INTO `sys_role_authority` VALUES (272, 3, '到用户消息', '/toUserNew');
INSERT INTO `sys_role_authority` VALUES (273, 1, '到用户消息', '/toUserNew');
INSERT INTO `sys_role_authority` VALUES (274, 4, '历史消息', '/sysMessage/findReadPage');
INSERT INTO `sys_role_authority` VALUES (275, 2, '历史消息', '/sysMessage/findReadPage');
INSERT INTO `sys_role_authority` VALUES (276, 3, '历史消息', '/sysMessage/findReadPage');
INSERT INTO `sys_role_authority` VALUES (277, 1, '历史消息', '/sysMessage/findReadPage');
INSERT INTO `sys_role_authority` VALUES (278, 4, '更新消息', '/sysMessage/updateRead');
INSERT INTO `sys_role_authority` VALUES (279, 2, '更新消息', '/sysMessage/updateRead');
INSERT INTO `sys_role_authority` VALUES (280, 3, '更新消息', '/sysMessage/updateRead');
INSERT INTO `sys_role_authority` VALUES (281, 1, '更新消息', '/sysMessage/updateRead');
INSERT INTO `sys_role_authority` VALUES (282, 4, '获得未读消息', '/sysMessage/findNotReadPage');
INSERT INTO `sys_role_authority` VALUES (283, 2, '获得未读消息', '/sysMessage/findNotReadPage');
INSERT INTO `sys_role_authority` VALUES (284, 3, '获得未读消息', '/sysMessage/findNotReadPage');
INSERT INTO `sys_role_authority` VALUES (285, 1, '获得未读消息', '/sysMessage/findNotReadPage');
INSERT INTO `sys_role_authority` VALUES (286, 4, '模板:漏洞', '/bug');
INSERT INTO `sys_role_authority` VALUES (287, 3, '模板:漏洞', '/bug');
INSERT INTO `sys_role_authority` VALUES (288, 2, '模板:漏洞', '/bug');
INSERT INTO `sys_role_authority` VALUES (289, 1, '模板:漏洞', '/bug');
INSERT INTO `sys_role_authority` VALUES (290, 4, '模板:工具', '/tool');
INSERT INTO `sys_role_authority` VALUES (291, 3, '模板:工具', '/tool');
INSERT INTO `sys_role_authority` VALUES (292, 2, '模板:工具', '/tool');
INSERT INTO `sys_role_authority` VALUES (293, 1, '模板:工具', '/tool');
INSERT INTO `sys_role_authority` VALUES (294, 4, '模板:任务', '/task');
INSERT INTO `sys_role_authority` VALUES (295, 3, '模板:任务', '/task');
INSERT INTO `sys_role_authority` VALUES (296, 2, '模板:任务', '/task');
INSERT INTO `sys_role_authority` VALUES (298, 1, '模板:任务', '/task');
INSERT INTO `sys_role_authority` VALUES (299, 1, '模板:管理', '/admin');
INSERT INTO `sys_role_authority` VALUES (300, 1, '模板:用户管理', '/userAdministration');
INSERT INTO `sys_role_authority` VALUES (301, 1, '模板:漏洞管理', '/bugAdministration');
INSERT INTO `sys_role_authority` VALUES (302, 1, '模板:工具管理', '/toolAdministration');
INSERT INTO `sys_role_authority` VALUES (303, 1, '模板:任务管理', '/taskAdministration');
INSERT INTO `sys_role_authority` VALUES (304, 4, '到工具列表', '/toToolList');
INSERT INTO `sys_role_authority` VALUES (305, 4, '获得漏洞数据', '/leak/findPageLeaks');
INSERT INTO `sys_role_authority` VALUES (306, 4, '最新发布任务', '/task/getLatestReleaseTask');
INSERT INTO `sys_role_authority` VALUES (307, 4, '最新完成任务', '/task/getLatestFinishTask');


