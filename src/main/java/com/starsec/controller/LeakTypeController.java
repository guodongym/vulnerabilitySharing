package com.starsec.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.starsec.model.DataTablePage;
import com.starsec.model.Result;
import com.starsec.po.LeakType;
import com.starsec.service.LeakTypeService;
;
/**
 * 漏洞类型
 * 
 * @author cheng cheng
 *
 */
@Controller
@RequestMapping(value = "/leakType")
public class LeakTypeController {

	// 漏洞类型
	@Autowired
	private LeakTypeService leakTypeService;

	/**
	 * findPageLeakTypes 分页查询漏洞类型
	 * 
	 * @param pageParameBean
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/findPageLeakTypes")
	public DataTablePage findPageLeakTypes(DataTablePage page) {
		DataTablePage pageLeakType = leakTypeService.findPageLeakTypes(page);
		return pageLeakType;
	}

	
	/**
	 * @Title: findAll 
	 * @Description: 查询所有
	 * @author zhaogd 
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/findAll")
	public List<LeakType> findAll() {
		return leakTypeService.findAll();
	}
	
	
	/**
	 * 添加修改漏洞类型
	 * 
	 * @param sysDepartment
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/saveOrUpdateLeakType")
	public Result saveOrUpdateLeakType(LeakType leakType) {
		Result result = leakTypeService.saveOrUpdateLeakType(leakType);
		return result;
	}

	/**
	 * deleteLeakType 删除漏洞类型
	 * 
	 * @param sysUserGroup
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/deleteLeakType")
	public Result deleteLeakType(Integer  leakTypeId) {
		Result result = leakTypeService.deleteLeakType(leakTypeId);
		return result;

	}

	/**
	 * 
	 * 批量删除漏洞类型
	 * 
	 * @param idListString
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/deleteLeakTypeList")
	public Result deleteLeakTypeList(String idListString) {
		Result result = leakTypeService.deleteLeakTypeList(idListString);
		return result;

	}

}