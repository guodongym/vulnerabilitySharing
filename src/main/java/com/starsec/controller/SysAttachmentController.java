package com.starsec.controller;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URLEncoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.IOUtils;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.starsec.annotation.IgnorePermission;
import com.starsec.constants.ImageType;
import com.starsec.po.SysAttachment;
import com.starsec.service.SysAttachmentService;
import com.starsec.util.FileUploadComponent;

@Controller
public class SysAttachmentController {
	
	@Autowired
	private FileUploadComponent fileUploadComponent;
	
	@Autowired
	private SysAttachmentService sysAttachmentService;
	
	
	@IgnorePermission
	@RequestMapping("/attachment/downloadImage/{imageTime}/{imagePath}.{extension}")
	public void downloadImage(@PathVariable String imageTime,@PathVariable String imagePath,@PathVariable String extension, HttpServletRequest request, HttpServletResponse response) throws IOException {
		String fileName;
		File file;
		if (StringUtils.isBlank(imageTime) && StringUtils.isBlank(imagePath) && StringUtils.isBlank(extension)) {
			file = new File(request.getSession().getServletContext().getRealPath("images/defaultPhoto.jpg"));
			fileName = file.getName();
		}else{
			file = new File(fileUploadComponent.getUploadPath(imageTime + File.separator +imagePath + "." + extension));
			fileName = file.getName();
		}
		
		int index = fileName.lastIndexOf('.');
		if (index != -1) {
			extension = fileName.substring(index + 1);
		}

		String contentType = "application/octet-stream";
		
		if(ImageType.getValueByName(extension) != null){
			contentType = ImageType.getValueByName(extension).toString();
		}

		String newFileName;
		if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") > 0) { // firefox
			newFileName = new String(fileName.getBytes("GBK"), "iso-8859-1");
		} else if (request.getHeader("USER-AGENT").toLowerCase().indexOf("msie") > 0) { // IE
			newFileName = URLEncoder.encode(fileName, "UTF-8");
			newFileName = newFileName.replace("+", "%20");
		} else {
			newFileName = new String(fileName.getBytes("UTF-8"), "iso-8859-1"); // chrom浏览器
		}

		response.addHeader("Content-Disposition", "attachment;filename=\"" + newFileName + "\"");
		response.addHeader("Content-Length", "" + file.length());

		response.setContentType(contentType);

		OutputStream out = new BufferedOutputStream(response.getOutputStream());
		InputStream input = null;
		try {
			input = new BufferedInputStream(new FileInputStream(file));
			byte[] buffer = new byte[1024];
			int length = -1;
			while ((length = input.read(buffer)) != -1) {
				out.write(buffer, 0, length);
			}
			out.flush();
		} finally {
			IOUtils.closeQuietly(input);
			out.close();
		}
	}
	
	@IgnorePermission
	@RequestMapping("/attachment/download/{attachmentId}")
	public void download(@PathVariable Integer attachmentId, HttpServletRequest request, HttpServletResponse response) throws IOException {
		String fileName;
		File file;
		if (attachmentId == 0) {
			file = new File(request.getSession().getServletContext().getRealPath("images/defaultPhoto.jpg"));
			fileName = file.getName();
		}else{
			SysAttachment sysAttachment = sysAttachmentService.findById(attachmentId);
			file = new File(fileUploadComponent.getUploadPath(sysAttachment.getFilePath()));
			fileName = sysAttachment.getFileName();
		}
		
		String extension = null;
		int index = fileName.lastIndexOf('.');
		if (index != -1) {
			extension = fileName.substring(index + 1);
		}

		String contentType = "application/octet-stream";
		if(ImageType.getValueByName(extension) != null){
			contentType = ImageType.getValueByName(extension).toString();
		}

		String newFileName;
		if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") > 0) { // firefox
			newFileName = new String(fileName.getBytes("GBK"), "iso-8859-1");
		} else if (request.getHeader("USER-AGENT").toLowerCase().indexOf("msie") > 0) { // IE
			newFileName = URLEncoder.encode(fileName, "UTF-8");
			newFileName = newFileName.replace("+", "%20");
		} else {
			newFileName = new String(fileName.getBytes("UTF-8"), "iso-8859-1"); // chrom浏览器
		}

		response.addHeader("Content-Disposition", "attachment;filename=\"" + newFileName + "\"");
		response.addHeader("Content-Length", "" + file.length());

		response.setContentType(contentType);

		OutputStream out = new BufferedOutputStream(response.getOutputStream());
		InputStream input = null;
		try {
			input = new BufferedInputStream(new FileInputStream(file));
			byte[] buffer = new byte[1024];
			int length = -1;
			while ((length = input.read(buffer)) != -1) {
				out.write(buffer, 0, length);
			}
			out.flush();
		} finally {
			IOUtils.closeQuietly(input);
			out.close();
		}
	}
}
