package com.starsec.vo;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import com.starsec.constants.SysRoleType;
import com.starsec.constants.TaskStatus;
import com.starsec.model.Vo;
import com.starsec.po.SysRole;
import com.starsec.po.SysUser;
import com.starsec.po.Task;
import com.starsec.po.TaskUser;
import com.starsec.util.DateUtil;
import com.starsec.util.SessionUtil;

/**
 * 任务
 * 
 * @author cheng cheng
 *
 */
public class TaskVo implements Vo<Task> {

	/** 任务ID */
	private Integer taskId;

	/** 任务名称 */
	private String taskName;

	/** 发布时间 */
	private String releaseTime;

	/** 发布人用户ID */
	private Integer releaseUserId;

	/** 发布人用户name */
	private String releaseUserAccount;

	/** 队长ID */
	private Integer leaderUserId;

	/** 队长name */
	private String leaderUserAccount;

	/** 限定人数 */
	private Integer taskNum;

	/** 参与人数 */
	private Integer sumParticipator;

	/** 悬赏积分 */
	private Integer taskScore;

	/** 完成时间 **/
	private String taskFinishTime;

	/** 截止时间 **/
	private String taskEndTime;

	private Integer status;
	/** 任务状态 */
	private String taskStatus;

	/** 任务类型ID */
	private Integer taskTypeId;

	/** 类型名称 */
	private String taskTypeName;

	/** 任务简介 **/
	private String taskOutline;

	/** 任务要求 */
	private String taskRequirement;

	/** 所有队员 **/
	private List<SysUser> memberUser;

	/** 是否可以确认完成或取消 **/
	private boolean submitOrCancel;

	/** 是否可以接受任务 **/
	private boolean receive;

	/** 是否可以转移队长 */
	private boolean leader;

	/** 是否可以接收队长 **/
	private boolean receiveLeader;

	/** 是否允许提交任务 **/
	private boolean submit;

	/** 是否可以发布、修改、删除任务 **/
	private boolean release;

	/** 是否可以打分 **/
	private boolean mark;

	private BigInteger countTask;
	private BigInteger countUser;

	private Integer userId;
	private String nickname;
	private Integer userGroupId;
	private String userGroupName;
	private Integer departmentId;
	private String departmentName;
	private BigDecimal sumScore;
	private Integer year;

	
	public boolean isMark() {
		return mark;
	}

	public void setMark(boolean mark) {
		this.mark = mark;
	}

	public Integer getYear() {
		return year;
	}

	public void setYear(Integer year) {
		this.year = year;
	}

	public BigDecimal getSumScore() {
		return sumScore;
	}

	public void setSumScore(BigDecimal sumScore) {
		this.sumScore = sumScore;
	}

	public BigInteger getCountUser() {
		return countUser;
	}

	public void setCountUser(BigInteger countUser) {
		this.countUser = countUser;
	}

	public Integer getUserId() {
		return userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	public String getNickname() {
		return nickname;
	}

	public void setNickname(String nickname) {
		this.nickname = nickname;
	}

	public Integer getUserGroupId() {
		return userGroupId;
	}

	public void setUserGroupId(Integer userGroupId) {
		this.userGroupId = userGroupId;
	}

	public String getUserGroupName() {
		return userGroupName;
	}

	public void setUserGroupName(String userGroupName) {
		this.userGroupName = userGroupName;
	}

	public Integer getDepartmentId() {
		return departmentId;
	}

	public void setDepartmentId(Integer departmentId) {
		this.departmentId = departmentId;
	}

	public String getDepartmentName() {
		return departmentName;
	}

	public void setDepartmentName(String departmentName) {
		this.departmentName = departmentName;
	}

	public BigInteger getCountTask() {
		return countTask;
	}

	public void setCountTask(BigInteger countTask) {
		this.countTask = countTask;
	}

	public boolean isReceiveLeader() {
		return receiveLeader;
	}

	public void setReceiveLeader(boolean receiveLeader) {
		this.receiveLeader = receiveLeader;
	}

	public boolean isReceive() {
		return receive;
	}

	public void setReceive(boolean receive) {
		this.receive = receive;
	}

	public boolean isSubmitOrCancel() {
		return submitOrCancel;
	}

	public void setSubmitOrCancel(boolean submitOrCancel) {
		this.submitOrCancel = submitOrCancel;
	}

	public Integer getTaskId() {
		return taskId;
	}

	public String getTaskEndTime() {
		return taskEndTime;
	}

	public void setTaskEndTime(String taskEndTime) {
		this.taskEndTime = taskEndTime;
	}

	public void setTaskId(Integer taskId) {
		this.taskId = taskId;
	}

	public String getTaskName() {
		return taskName;
	}

	public void setTaskName(String taskName) {
		this.taskName = taskName;
	}

	public String getReleaseTime() {
		return releaseTime;
	}

	public void setReleaseTime(String releaseTime) {
		this.releaseTime = releaseTime;
	}

	public Integer getReleaseUserId() {
		return releaseUserId;
	}

	public void setReleaseUserId(Integer releaseUserId) {
		this.releaseUserId = releaseUserId;
	}

	public Integer getLeaderUserId() {
		return leaderUserId;
	}

	public void setLeaderUserId(Integer leaderUserId) {
		this.leaderUserId = leaderUserId;
	}

	public Integer getTaskNum() {
		return taskNum;
	}

	public void setTaskNum(Integer taskNum) {
		this.taskNum = taskNum;
	}

	public Integer getSumParticipator() {
		return sumParticipator;
	}

	public void setSumParticipator(Integer sumParticipator) {
		this.sumParticipator = sumParticipator;
	}

	public Integer getTaskScore() {
		return taskScore;
	}

	public void setTaskScore(Integer taskScore) {
		this.taskScore = taskScore;
	}

	public String getTaskStatus() {
		return taskStatus;
	}

	public void setTaskStatus(String taskStatus) {
		this.taskStatus = taskStatus;
	}

	public Integer getTaskTypeId() {
		return taskTypeId;
	}

	public void setTaskTypeId(Integer taskTypeId) {
		this.taskTypeId = taskTypeId;
	}

	public String getTaskTypeName() {
		return taskTypeName;
	}

	public void setTaskTypeName(String taskTypeName) {
		this.taskTypeName = taskTypeName;
	}

	public String getReleaseUserAccount() {
		return releaseUserAccount;
	}

	public void setReleaseUserAccount(String releaseUserAccount) {
		this.releaseUserAccount = releaseUserAccount;
	}

	public String getLeaderUserAccount() {
		return leaderUserAccount;
	}

	public void setLeaderUserAccount(String leaderUserAccount) {
		this.leaderUserAccount = leaderUserAccount;
	}

	public String getTaskFinishTime() {
		return taskFinishTime;
	}

	public void setTaskFinishTime(String taskFinishTime) {
		this.taskFinishTime = taskFinishTime;
	}

	public String getTaskOutline() {
		return taskOutline;
	}

	public void setTaskOutline(String taskOutline) {
		this.taskOutline = taskOutline;
	}

	public String getTaskRequirement() {
		return taskRequirement;
	}

	public void setTaskRequirement(String taskRequirement) {
		this.taskRequirement = taskRequirement;
	}

	public List<SysUser> getMemberUser() {
		return memberUser;
	}

	public void setMemberUser(List<SysUser> memberUser) {
		this.memberUser = memberUser;
	}

	public boolean isLeader() {
		return leader;
	}

	public void setLeader(boolean leader) {
		this.leader = leader;
	}

	public boolean isSubmit() {
		return submit;
	}

	public void setSubmit(boolean submit) {
		this.submit = submit;
	}

	public boolean isRelease() {
		return release;
	}

	public void setRelease(boolean release) {
		this.release = release;
	}

	public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Override
	public void from(Task po) {
		setTaskId(po.getId());
		setTaskName(po.getTaskName());
		setReleaseTime(DateUtil.formatDateTime(po.getReleaseTime()));
		setReleaseUserId(po.getReleaseUser().getId());
		setReleaseUserAccount(po.getReleaseUser().getUserAccount());

		boolean isHaveReceive = true;
		boolean isTransfer = false;
		Set<TaskUser> taskUsers = po.getTaskUsers();
		ArrayList<SysUser> memberUsers = new ArrayList<SysUser>();
		for (TaskUser taskUser : taskUsers) {
			if (taskUser.isLeader()) {
				setLeaderUserId(taskUser.getSysUser().getId());
				setLeaderUserAccount(taskUser.getSysUser().getUserAccount());
				isTransfer = taskUser.isTransfer();
			} else {
				memberUsers.add(taskUser.getSysUser());
			}
			if (taskUser.getSysUser().getId() == SessionUtil.loginUser().getId()) {
				isHaveReceive = false;
			}
			if (!taskUser.isLeader() && taskUser.isTransfer() && taskUser.getSysUser().getId() == SessionUtil.loginUser().getId()) {
				setReceiveLeader(true);
			}
		}

		setMemberUser(memberUsers);

		setTaskNum(po.getTaskNum());
		setSumParticipator(po.getTaskUsers().size());

		setTaskScore(po.getTaskScore());
		setTaskFinishTime(DateUtil.formatDateTime(po.getTaskFinishTime()));
		setTaskEndTime(DateUtil.formatDate(po.getTaskEndTime()));
		setTaskStatus(TaskStatus.valueOf(po.getStatus()).toString());

		setTaskTypeId(po.getTaskType().getId());
		setTaskTypeName(po.getTaskType().getTaskName());
		setTaskOutline(po.getTaskOutline());
		setTaskRequirement(po.getTaskRequirement());

		setSubmitOrCancel(po.getStatus() == TaskStatus.已发布.value() && SessionUtil.loginUser().getId() == po.getReleaseUser().getId());

		setReceive(po.getStatus() == TaskStatus.已发布.value() && getTaskNum() > getSumParticipator() && isHaveReceive&&isSimpleUser());

		setLeader(SessionUtil.loginUser().getId() == getLeaderUserId() && !isTransfer && po.getStatus() == TaskStatus.已发布.value());
		setSubmit(SessionUtil.loginUser().getId() == getLeaderUserId() && po.getStatus() == TaskStatus.已发布.value());
		setRelease(SessionUtil.loginUser().getId() == po.getReleaseUser().getId() && po.getStatus() == TaskStatus.未发布.value());
		setMark(SessionUtil.loginUser().getId() == getLeaderUserId() && po.getStatus() == TaskStatus.已完成.value());
	}

	/**
	 * 判断是否是普通用户
	 * @return
	 */
	private boolean isSimpleUser() {
		Set<SysRole> sysRoles = SessionUtil.loginUser().getSysRoles();
		for (SysRole sysRole : sysRoles) {
			if(SysRoleType.普通用户.value() == sysRole.getId()){
				return true;
			}
		}
		return false;
	}

}