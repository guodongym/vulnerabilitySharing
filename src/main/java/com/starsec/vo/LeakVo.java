package com.starsec.vo;

import java.io.Serializable;
import java.util.Set;

import com.starsec.constants.Constants;
import com.starsec.constants.LeakAuditResult;
import com.starsec.constants.LeakStatus;
import com.starsec.constants.RiskLevel;
import com.starsec.constants.SysRoleType;
import com.starsec.model.Vo;
import com.starsec.po.Leak;
import com.starsec.po.SysRole;
import com.starsec.util.DateUtil;
import com.starsec.util.SessionUtil;

/**
 * 漏洞信息
 * 
 * @author cheng cheng
 *
 */
public class LeakVo implements Serializable, Vo<Leak> {

	private static final long serialVersionUID = -3062223541303687660L;

	/** 漏洞ID */
	private Integer id;

	/** 漏洞名称 */
	private String leakName;

	/** 提交时间 */
	private String submitTime;

	/** 提交人用户id **/
	private Integer submitUserId;

	/** 提交人用户账号 **/
	private String submitUserAccount;

	/** 评论数 */
	private Integer leakCommentSum;

	/** 审核人用户id **/
	private Integer auditUserId;

	/** 审核人用户账号 **/
	private String auditUserAccount;

	/** 审核时间 */
	private String auditTime;

	/** 审核结果 1：误报 2：重复 3：省公司首发漏洞 4：国网首发漏洞 */
	private String auditResult;

	/** 漏洞状态 1：未发布 2：未审核 3：已审核 4:已删除 */
	private String leakStatus;

	
	/** 漏洞编号，根据规则自动生成 (Not Null) */
	private String leakNo;
	

	/** 评论数 */
	private Integer countLeakComment;
	
	
	/** CVE-ID */
	private String cveId;
	/** CNNVD-ID */
	private String cnnvdId;
	/** CNVD-ID */
	private String cnvdId;
	
	/** 涉及系统名称 */
	private String influenceSystemName;
	
	/** 漏洞类型name */
	private String leakTypeName;
	
	/** 危险等级 1：高 2：中 3：低  */
	private String riskLevelName;
	
	/** 危险等级 1：高 2：中 3：低  */
	private Integer riskLevel;
	
	/** 漏洞作者 */
	private String leakAuthor;
	
	/** 附件下载地址 */
	private String  attachmentDownLoadPath;
	
	/** 漏洞概要*/
	private String leakOutline;
	
	/** 漏洞详情 */
	private String leakDetail;
	
	/** 解决方案 */
	private String solution;
	
	/** 审核意见 */
	private String auditOpinion;
	
	

	//是否可修改
	private boolean canUpdate;
	
	//是否可生成通知单
	private boolean notice;
	
	//是否可审核
	private boolean audit;
	
	//漏洞类型id
	private Integer  leakTypeId;
	
	//附件id
	private Integer  attachmentId;
	
	private String fileName;
	
		
	



	@Override
	public void from(Leak po) {
		setRiskLevel(po.getRiskLevel());
		setLeakTypeId(po.getLeakType().getId());
		setAudit(getAudit(po));//是否可审核
		setNotice(isNotice(po));//是否可生成通知单
		setCanUpdate(getCanUpdate(po));//是否可修改
		setAuditOpinion(po.getAuditOpinion());
		setSolution(po.getSolution());
		setLeakDetail(po.getLeakDetail());
		setLeakOutline(po.getLeakOutline());
		
		if (po.getSysAttachment() != null) {
			setAttachmentId(po.getSysAttachment().getId());
			String ctx = (String) SessionUtil.getRequest().getAttribute(Constants.CTX);
			setAttachmentDownLoadPath(ctx + Constants.DOWNLOAD_FILE_URL + getAttachmentId().toString());
			setFileName(po.getSysAttachment().getFileName());
		}

		
		
		
		setLeakAuthor(po.getLeakAuthor());
		setRiskLevelName(getRiskLevelName(po));
		setLeakTypeName(po.getLeakType().getLeakName());
		setId(po.getId());
		setLeakName(po.getLeakName());
		setSubmitTime(DateUtil.formatDateTime(po.getSubmitTime()));
		setSubmitUserId(po.getSubmitUser().getId());
		setSubmitUserAccount(po.getSubmitUser().getUserAccount());
		setLeakCommentSum(po.getLeakComments().size());
		setAuditUserId(po.getAuditUser() == null ? null : po.getAuditUser().getId());
		setAuditUserAccount(po.getAuditUser() == null ? null : po.getAuditUser().getUserAccount());
		setAuditTime(DateUtil.formatDateTime(po.getAuditTime()));
//		setAuditResult(LeakAuditResult.valueOf(po.getAuditResult()).toString());
		setAuditResult(getAuditResult(po));
		setLeakStatus(LeakStatus.valueOf(po.getLeakStatus()).toString());
		setCountLeakComment(po.getLeakComments().size());
		setLeakNo(po.getLeakNo());//漏洞编号
		setCveId(po.getCveId());
		setCnnvdId(po.getCnnvdId());
		setCnvdId(po.getCnvdId());
		setInfluenceSystemName(po.getInfluenceSystemName());

	}

	/**获得审核结果
	 * setAuditResult
	 * @param po
	 * @return
	 */
	private String getAuditResult(Leak po) {
		if(null==po.getAuditResult()){
			return "";
		}else{
			return LeakAuditResult.valueOf(po.getAuditResult()).toString();
		}
	}

	/**
	 * 是否可审核
	 * @param po 
	 * @return
	 */
	private boolean getAudit(Leak po) {
		//是漏洞 审核员 且 已发布
		if(isLeakAuditor()
				&&LeakStatus.未审核.value().equals(po.getLeakStatus())
				){
			return true;
		}
		return false;
	}

	/**
	 * 是否可生成通知单
	 * 漏洞审核员可以对审核结果为漏洞的漏洞生成漏洞通知单
	 * @param po
	 * @return
	 */
	private boolean isNotice(Leak po) {
		//审核结果为漏洞    角色是漏洞审核员
		if(isLeak(po)&&isLeakAuditor()){
			return true;
		}
		return false;
	}

	/**
	 * 判断审核结果是否为漏洞
	 * @param po
	 * @return
	 */
	private boolean isLeak(Leak po) {
		if(LeakAuditResult.漏洞.value().equals(po.getAuditResult())){
			return true;
		}
		if(LeakAuditResult.国网首发漏洞.value().equals(po.getAuditResult())){
			return true;
		}
		if(LeakAuditResult.省公司首发漏洞.value().equals(po.getAuditResult())){
			return true;
		}
		return false;
	}

	/**
	 * 角色是否为漏洞审核员
	 * @return
	 */
	private boolean isLeakAuditor() {
		Set<SysRole> sysRoles = SessionUtil.loginUser().getSysRoles();
		for (SysRole sysRole : sysRoles) {
			if(SysRoleType.漏洞审计员.value() == sysRole.getId()){
				return true;
			}
		}
		return false;
	}


	/**
	 * 是否可修改
	 * 普通用户在漏洞审核前可以修改自己的漏洞，漏洞审核后只有漏洞审核员能够修改。
	 * @param po 
	 * @return
	 */
	private boolean getCanUpdate(Leak po) {
		//是自己的漏洞   漏洞审核前           
		if(isSubmitUser(po)&&isBeforAudit(po)){
			return true;
		}
		//是漏洞审核员  审核后  已审核(3)
		if(isLeakAuditor()&&isAudited(po)){
			return true;
		}
		return false;
	}
	

	/**
	 * 审核后  已审核(3)
	 * @param po
	 * @return
	 */
	private boolean isAudited(Leak po) {
		if(LeakStatus.已审核.value().equals(po.getLeakStatus())){
			return true;
		}
		return false;
	}





	/**
	 *   漏洞审核前            未发布(1),未审核(2),
	 * @param po
	 * @return
	 */
	private boolean isBeforAudit(Leak po) {
		Integer leakStatus = po.getLeakStatus();
		if(LeakStatus.未发布.value().equals(leakStatus)||
				LeakStatus.未审核.value().equals(leakStatus)){
			return true;
		}
		return false;
	}


	/**
	 * 是自己的漏洞  
	 * @param po
	 * @return
	 */
	private boolean isSubmitUser(Leak po) {
		if(getLoginUserId() == po.getSubmitUser().getId()){
			return true;
		}
		return false;
	}


	/**
	 * 从po中获得文件保存地址
	 * @param po
	 * @return
	 */
	@SuppressWarnings("unused")
	private String getSysAttachment(Leak po) {
		if(null!=po.getSysAttachment()){
			return po.getSysAttachment().getFilePath();
		}
		return null;
	}

	/**
	 * 从po中获得危险等级名称
	 * @return
	 */
	private String getRiskLevelName(Leak po){
		Integer riskLevel = po.getRiskLevel();
		//遍历漏洞危险等级
		for (RiskLevel oneRiskLevel : RiskLevel.values()) {
			if(riskLevel==oneRiskLevel.value()){
				//如果相同返回
				return RiskLevel.valueOf(riskLevel).toString();
			}
		}
		return null;
	}

	/**
	 * 获得登陆用户的id
	 * @return
	 */
	public Integer getLoginUserId() {
		return SessionUtil.loginUser().getId();
	}

	public String getCveId() {
		return cveId;
	}

	public void setCveId(String cveId) {
		this.cveId = cveId;
	}

	public String getCnnvdId() {
		return cnnvdId;
	}

	public void setCnnvdId(String cnnvdId) {
		this.cnnvdId = cnnvdId;
	}

	public String getCnvdId() {
		return cnvdId;
	}

	public void setCnvdId(String cnvdId) {
		this.cnvdId = cnvdId;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	public Integer getAuditUserId() {
		return auditUserId;
	}

	public void setAuditUserId(Integer auditUserId) {
		this.auditUserId = auditUserId;
	}

	public String getAuditUserAccount() {
		return auditUserAccount;
	}

	public void setAuditUserAccount(String auditUserAccount) {
		this.auditUserAccount = auditUserAccount;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getLeakName() {
		return leakName;
	}

	public void setLeakName(String leakName) {
		this.leakName = leakName;
	}

	public String getSubmitTime() {
		return submitTime;
	}

	public void setSubmitTime(String submitTime) {
		this.submitTime = submitTime;
	}

	public Integer getLeakCommentSum() {
		return leakCommentSum;
	}

	public void setLeakCommentSum(Integer leakCommentSum) {
		this.leakCommentSum = leakCommentSum;
	}

	public String getAuditResult() {
		return auditResult;
	}

	public void setAuditResult(String auditResult) {
		this.auditResult = auditResult;
	}

	public String getLeakStatus() {
		return leakStatus;
	}

	public void setLeakStatus(String leakStatus) {
		this.leakStatus = leakStatus;
	}

	public Integer getSubmitUserId() {
		return submitUserId;
	}

	public void setSubmitUserId(Integer submitUserId) {
		this.submitUserId = submitUserId;
	}

	public String getSubmitUserAccount() {
		return submitUserAccount;
	}

	public void setSubmitUserAccount(String submitUserAccount) {
		this.submitUserAccount = submitUserAccount;
	}

	public String getAuditTime() {
		return auditTime;
	}

	public void setAuditTime(String auditTime) {
		this.auditTime = auditTime;
	}


	public Integer getCountLeakComment() {
		return countLeakComment;
	}

	public void setCountLeakComment(Integer countLeakComment) {
		this.countLeakComment = countLeakComment;
	}
	

	

	public String getLeakNo() {
		return leakNo;
	}

	public void setLeakNo(String leakNo) {
		this.leakNo = leakNo;
	}

	public String getInfluenceSystemName() {
		return influenceSystemName;
	}

	public void setInfluenceSystemName(String influenceSystemName) {
		this.influenceSystemName = influenceSystemName;
	}


	public String getLeakTypeName() {
		return leakTypeName;
	}


	public void setLeakTypeName(String leakTypeName) {
		this.leakTypeName = leakTypeName;
	}


	public String getRiskLevelName() {
		return riskLevelName;
	}


	public void setRiskLevelName(String riskLevelName) {
		this.riskLevelName = riskLevelName;
	}

	public String getLeakAuthor() {
		return leakAuthor;
	}

	public void setLeakAuthor(String leakAuthor) {
		this.leakAuthor = leakAuthor;
	}

	public String getAttachmentDownLoadPath() {
		return attachmentDownLoadPath;
	}

	public void setAttachmentDownLoadPath(String attachmentDownLoadPath) {
		this.attachmentDownLoadPath = attachmentDownLoadPath;
	}

	public String getLeakOutline() {
		return leakOutline;
	}

	public void setLeakOutline(String leakOutline) {
		this.leakOutline = leakOutline;
	}

	public String getLeakDetail() {
		return leakDetail;
	}

	public void setLeakDetail(String leakDetail) {
		this.leakDetail = leakDetail;
	}

	public String getSolution() {
		return solution;
	}

	public void setSolution(String solution) {
		this.solution = solution;
	}

	public String getAuditOpinion() {
		return auditOpinion;
	}

	public void setAuditOpinion(String auditOpinion) {
		this.auditOpinion = auditOpinion;
	}
	public boolean isCanUpdate() {
		return canUpdate;
	}
	public void setCanUpdate(boolean canUpdate) {
		this.canUpdate = canUpdate;
	}


	public boolean isNotice() {
		return notice;
	}


	public void setNotice(boolean notice) {
		this.notice = notice;
	}


	public boolean isAudit() {
		return audit;
	}


	public void setAudit(boolean audit) {
		this.audit = audit;
	}

	public Integer getLeakTypeId() {
		return leakTypeId;
	}

	public void setLeakTypeId(Integer leakTypeId) {
		this.leakTypeId = leakTypeId;
	}

	public Integer getRiskLevel() {
		return riskLevel;
	}

	public void setRiskLevel(Integer riskLevel) {
		this.riskLevel = riskLevel;
	}

	public Integer getAttachmentId() {
		return attachmentId;
	}

	public void setAttachmentId(Integer attachmentId) {
		this.attachmentId = attachmentId;
	}

	public String getFileName() {
		return fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}



	



	
	
}