package com.starsec.dao;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.starsec.model.DataTablePage;
import com.starsec.po.SysLog;
import com.starsec.util.DateUtil;
import com.starsec.vo.SysLogVo;

/** 系统日志表(SYS_LOG) **/
@Repository
public class SysLogDao extends BaseDao<SysLog, Serializable> {
	
	/**
	 * 生成日志并保存
	 * @return
	 */
	public void createSysLog(String userAccount,String logTarget, String logContent) {
		SysLog sysLog =new SysLog();
		sysLog.setLogContent(logContent);
		sysLog.setLogTarget(logTarget);
		sysLog.setLogTime(DateUtil.currentTime());
		sysLog.setUserAccount(userAccount);
		
		super.save(sysLog);
	}
	 

	public DataTablePage findPageResults() {
		String Hql = " from "+ SysLog.class.getCanonicalName() +" where 1=1";
		String countHql = " select count(*) from "+ SysLog.class.getCanonicalName() +" where 1=1";
		return super.findPageByFetchedHql(Hql, countHql, 1, 10);
	}

	public void saveSysLog(SysLog sysLog) {
		super.save(sysLog);
	}
	
	/**
	 * 分页查询系统日志信息
	 * @param page
	 * @return
	 */
	public DataTablePage findPageResults(DataTablePage page) {
		StringBuffer hql = new StringBuffer(" from " +SysLog.class.getCanonicalName() + " where 1=1");
		List<Object> paramList = new ArrayList<Object>();
		//		日志可以通过时间、用户、对象搜索。可以通过关键对内容模糊搜索。
		if(null!=page.getSearch()){
			hql.append(" and userAccount like ? " );
			paramList.add("%"+page.getSearch()+"%");
			
			hql.append( "or logTarget like ? " );
			paramList.add("%"+page.getSearch()+"%");
			
			hql.append( "or logContent like ? " );
			paramList.add("%"+page.getSearch()+"%");
		}
		
		hql.append(" order by logTime desc ");

		return super.findPageByFetchedHql(SysLogVo.class, hql.toString(), null, page.getPageNo(), page.getLimit(), paramList.toArray());
	
	}
	
	
	/**
	* 判断字符串是否为空
	* @param str 字符串
	* @return 是否为空
	*/
	public  boolean isEmptyString(String str)
	{
	return str == null || str.trim().length() == 0;
	}
}