package com.starsec.dao;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Repository;

import com.starsec.model.DataTablePage;
import com.starsec.po.SysMessage;
import com.starsec.util.SessionUtil;
import com.starsec.vo.SysMessageVo;

@Repository
public class SysMessageDao extends BaseDao<SysMessage, Serializable> {

	
	public DataTablePage findPage(DataTablePage page,boolean isRead) {
		StringBuffer hql = new StringBuffer(" from " + SysMessage.class.getCanonicalName() + " where 1=1");
		List<Object> paramList = new ArrayList<Object>();
		
		if (StringUtils.isNotBlank(page.getSearch())) {
			hql.append(" and message like ? ");
			paramList.add("%" + page.getSearch() + "%");
		}
		
		hql.append(" and sysUser.id=? ");
		paramList.add(SessionUtil.loginUser().getId());
		hql.append(" and isRead=? ");
		paramList.add(isRead);
		
		hql.append(" order by messageTime desc ");
		return super.findPageByFetchedHql(SysMessageVo.class, hql.toString(), null, page.getPageNo(), page.getLimit(), paramList.toArray());
	}
	
	
	public Long countNotRead(){
		String hql = " select count(*) from " + SysMessage.class.getCanonicalName() + " where sysUser.id=? and isRead=? ";
		return super.countByHql(hql, SessionUtil.loginUser().getId(),false);
	}
	
}