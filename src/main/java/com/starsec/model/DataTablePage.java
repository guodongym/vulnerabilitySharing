package com.starsec.model;

import java.util.ArrayList;
import java.util.List;

/**
 * 分页封装类 用于做分页查询的基础类，封装了一些分页的相关属性
 * 
 * @param <T>
 * 
 */
public class DataTablePage {

	// 每页显示 条数
	private Integer limit;
	// 本次截止条数
	private Integer offset;
	// 查询参数
	private String search;
	// 升序还是降序（asc,dexc）order=asc
	private String order;
	// 排序所用列
	private String sort;

	// 下一页
	private int pageNo;

	// 总条数
	private int total;

	private Class<? extends Vo<?>> voClass;
	// 记录
	private List<?> rows;

	public Class<? extends Vo<?>> getVoClass() {
		return voClass;
	}

	public void setVoClass(Class<? extends Vo<?>> voClass) {
		this.voClass = voClass;
	}

	public Integer getLimit() {
		return limit;
	}

	public void setLimit(Integer limit) {
		this.limit = limit == null ? 0 : limit;
	}

	public Integer getOffset() {
		return offset;
	}

	public void setOffset(Integer offset) {
		this.offset = offset == null ? 0 : offset;
	}

	public String getSearch() {
		return search;
	}

	public void setSearch(String search) {
		this.search = search;
	}

	public String getOrder() {
		return order;
	}

	public void setOrder(String order) {
		this.order = order;
	}

	public String getSort() {
		return sort;
	}

	public void setSort(String sort) {
		this.sort = sort;
	}

	public int getPageNo() {
		if (pageNo <= 0) {
			return 1;
		} else {
			return pageNo;
		}
	}

	public void setPageNo(int pageNo) {
		this.pageNo = pageNo;
	}

	public void resetPageNo() {
		if (offset == null || limit == null) {
			offset = 0;
			limit = 5;
			pageNo = 1;
		}else{
			pageNo = offset / limit + 1;
		}
	}

	public int getTotal() {
		return total;
	}

	public void setTotal(int total) {
		this.total = total;
	}

	public List<?> getRows() {
		return rows;
	}

	@SuppressWarnings({"rawtypes", "unchecked"})
	public void setRows(List<?> rows) {
		if (voClass == null) {
			this.rows = rows;
		} else {
			List<Vo> results = new ArrayList<Vo>(rows.size());
			try {
				for (Object record : rows) {
					Vo result = voClass.newInstance();
					result.from(record);
					results.add(result);
				}
			} catch (Exception e) {
				throw new RuntimeException(e);
			}
			this.rows = results;
		}
	}
}